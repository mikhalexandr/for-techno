name: tetris

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "5252:5252"
    depends_on:
      postgres:
        condition: service_healthy

  postgres-auth:
    container_name: postgres-auth
    image: postgres
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: phptop123
      POSTGRES_DB: keycloak
    ports:
      - "4242:5432"
    volumes:
      - postgres_auth_data:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres-auth
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: phptop123
      KEYCLOAK_ADMIN: mikhalexandr
      KEYCLOAK_ADMIN_PASSWORD: phptop123
      KC_HEALTH_ENABLED: true
    ports:
      - "8095:8080"
    volumes:
      - ./infra/keycloak_/config/keycloak-user-listener-1.0.jar:/opt/keycloak/providers/keycloak-user-listener-1.0.jar
      - ./infra/keycloak_/config/keycloak-user-realm.json:/opt/keycloak/data/import/keycloak-user-realm.json
    command:
      - start-dev
      - --import-realm
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/opt/keycloak/data/import"
      - "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8095/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres-auth:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: mikhalexandr
      POSTGRES_PASSWORD: phptop123
      POSTGRES_DB: tetris
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  postgres_auth_data:
  postgres_data:
