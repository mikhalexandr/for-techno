name: undefined

services:
#  api:
#    container_name: api
#    build:
#      context: .
#      dockerfile: Dockerfile
#    env_file:
#        - ./.env
#    ports:
#      - "8094:8094"
#    depends_on:
#      keycloak:
#        condition: service_healthy
#      minio:
#        condition: service_healthy
#      postgres:
#        condition: service_healthy
#      redis:
#        condition: service_healthy

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak
    environment:
      KEYCLOAK_ADMIN: mikhalexandr
      KEYCLOAK_ADMIN_PASSWORD: phptop123
    ports:
      - "8095:8095"
    volumes:
      - ./core/_keycloak/config:/opt/keycloak/data/import
    command:
      - start-dev
      - --import-realm
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/opt/keycloak/data/import"
      - "-Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8095/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio
    build: infra/minio/config
    environment:
      MINIO_ROOT_USER: mikhalexandr
      MINIO_ROOT_PASSWORD: phptop123
    ports:
      - "9000:9000"
      - "9002:9002"
    volumes:
      - minio_data:/var/lib/minio/data
    healthcheck:
      test: [ "CMD", "sh", "-c", "mc alias set myminio http://localhost:9000 mikhalexandr phptop123 && mc ls myminio" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: mikhalexandr
      POSTGRES_PASSWORD: phptop123
      POSTGRES_DB: etalon
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  minio_data:
  postgres_data:
  redis_data:
